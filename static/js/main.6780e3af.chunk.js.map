{"version":3,"sources":["redux/spawners.js","redux/reducer.js","redux/store.js","containers/AppBar.js","containers/Spawner.js","containers/SpawnerContainer.js","index.js","layouts/App.js"],"names":["initState","combineReducers","spawners","state","action","type","length","middlewares","logger","enhancer","compose","applyMiddleware","createStore","rootReducer","AppBar","dispatch","useDispatch","Header","className","onClick","courses","window","Spawner","useState","courseIndex","setCourseIndex","render","setRender","resultText","setResultText","input","useRef","name","hasModify","onValueChange","useCallback","value","current","console","log","createForm","items","courseId","map","key","defaultValue","onChange","v","Array","fill","join","Group","options","keys","Object","Option","useEffect","forms","form","index","title","spawnResult","result","template","callCnt","search","replace","matched","isArray","message","error","copytext","document","createElement","body","appendChild","select","execCommand","removeChild","success","course","item","placeholder","e","target","block","Modal","confirm","content","onOk","okText","cancelText","onCancel","maskClosable","TextArea","rows","SpawnerContainer","useSelector","Content","spawner","ReactDOM","store","onUnload","returnValue","addEventListener","removeEventListener","getElementById"],"mappings":"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","file":"static/js/main.6780e3af.chunk.js","sourcesContent":["export const ADD_SPAWNER = 'ADD_SPAWNER';\r\nexport const addSpawner = () => ({\r\n  type: ADD_SPAWNER\r\n});\r\n\r\nconst initState = [];\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SPAWNER:\r\n      return [...state, state.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport spawners from './spawners';\r\nexport default combineReducers({ spawners });\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst enhancer = compose(applyMiddleware(...middlewares));\r\n\r\nexport default createStore(rootReducer, enhancer);\r\n","import React from 'react';\r\nimport { Layout, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSpawner } from '../redux/spawners';\r\n\r\nexport default function AppBar() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Layout.Header className=\"app-bar\">\r\n      <div>编程猫反馈生成器</div>\r\n      <Button type=\"primary\" onClick={() => dispatch(addSpawner())}>\r\n        新建\r\n      </Button>\r\n    </Layout.Header>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef, Fragment } from 'react';\r\nimport { Card, Select, Rate, Checkbox, Input, Button, message, Modal } from 'antd';\r\nconst { courses } = window;\r\n\r\nexport default function Spawner() {\r\n  const [courseIndex, setCourseIndex] = useState(0);\r\n  const [render, setRender] = useState(null);\r\n  const [resultText, setResultText] = useState('');\r\n  const input = useRef({ name: '训练师' });\r\n  const hasModify = useRef(false);\r\n\r\n  const onValueChange = useCallback((name, value) => {\r\n    input.current[name] = value;\r\n    console.log(input.current);\r\n  }, []);\r\n\r\n  const createForm = useCallback(\r\n    (items, courseId) => {\r\n      return items.map(({ type, name, value }) => (\r\n        <Fragment key={`${courseId}-${name}`}>\r\n          {(() => {\r\n            switch (type) {\r\n              case 'rate':\r\n                if (!input.current[name]) onValueChange(name, '⭐⭐⭐⭐⭐');\r\n                return (\r\n                  <Rate\r\n                    defaultValue={5}\r\n                    onChange={v => onValueChange(name, new Array(v).fill('⭐').join(''))}\r\n                  />\r\n                );\r\n              case 'check-box':\r\n                if (!input.current[name]) onValueChange(name, value);\r\n                return (\r\n                  <Checkbox.Group\r\n                    options={value}\r\n                    defaultValue={value}\r\n                    onChange={v => onValueChange(name, v)}\r\n                  />\r\n                );\r\n              case 'select':\r\n                const keys = Object.keys(value);\r\n                if (!input.current[name]) onValueChange(name, value[keys[0]]);\r\n                return (\r\n                  <Select\r\n                    className=\"select mb\"\r\n                    defaultValue={keys[0]}\r\n                    onChange={key => onValueChange(name, value[key])}\r\n                  >\r\n                    {keys.map(key => (\r\n                      <Select.Option key={key}>{key}</Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                );\r\n              default:\r\n                return null;\r\n            }\r\n          })()}\r\n        </Fragment>\r\n      ));\r\n    },\r\n    [onValueChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const { forms } = courses[courseIndex];\r\n    console.log('render');\r\n    setRender(\r\n      forms.map((form, index) => (\r\n        <div key={index} className=\"form\">\r\n          <h4 className=\"title\">{form.title}</h4>\r\n          {createForm(form.items, courseIndex)}\r\n        </div>\r\n      ))\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [courseIndex, onValueChange]);\r\n\r\n  const spawnResult = useCallback(() => {\r\n    hasModify.current = false;\r\n    if (!input.current.name) input.current.name = '训练师';\r\n    const { template } = courses[courseIndex];\r\n    let result = template.join('\\n');\r\n    let callCnt = 0;\r\n    while (result.search(/\\$\\{([^}]*)\\}/) !== -1 && callCnt < 100) {\r\n      result = result.replace(/\\$\\{([^}]*)\\}/g, (matched, key) => {\r\n        if (Array.isArray(input.current[key])) {\r\n          return input.current[key].join('，');\r\n        }\r\n        return input.current[key];\r\n      });\r\n      ++callCnt;\r\n    }\r\n    if (callCnt >= 100) {\r\n      message.error('生成调用次数过多，请检查模板变量是否存在嵌套');\r\n    }\r\n    setResultText(result);\r\n    const copytext = document.createElement('textarea');\r\n    copytext.value = result;\r\n    document.body.appendChild(copytext);\r\n    copytext.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(copytext);\r\n    message.success('复制成功', 1);\r\n  }, [courseIndex]);\r\n  return (\r\n    <Card\r\n      title={\r\n        <Select\r\n          className=\"select\"\r\n          value={courseIndex}\r\n          onChange={value => {\r\n            input.current = { name: input.current.name, course: courses[courseIndex].name };\r\n            setCourseIndex(value);\r\n          }}\r\n        >\r\n          {courses.map((item, index) => (\r\n            <Select.Option key={index} value={index}>\r\n              {item.name}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      }\r\n      className=\"spawner\"\r\n    >\r\n      <div className=\"form\">\r\n        <h4 className=\"title\">基本信息</h4>\r\n        <Input placeholder=\"姓名\" onChange={e => onValueChange('name', e.target.value)} />\r\n      </div>\r\n      {render}\r\n      <Button\r\n        type=\"primary\"\r\n        block\r\n        onClick={() => {\r\n          if (hasModify.current) {\r\n            Modal.confirm({\r\n              title: 'Warning',\r\n              content: '内容已经修改，确定重新生成吗？',\r\n              onOk: spawnResult,\r\n              okText: '确认',\r\n              cancelText: '取消',\r\n              onCancel: () => null,\r\n              maskClosable: true\r\n            });\r\n          } else {\r\n            spawnResult();\r\n          }\r\n        }}\r\n      >\r\n        生成并复制\r\n      </Button>\r\n      <br /> <br />\r\n      <Input.TextArea\r\n        rows={5}\r\n        value={resultText}\r\n        onChange={e => {\r\n          hasModify.current = true;\r\n          setResultText(e.target.value);\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport Spawner from './Spawner';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function SpawnerContainer() {\r\n  const spawners = useSelector(state => state.spawners);\r\n  return (\r\n    <Layout.Content className=\"spawner-cntr\">\r\n      {spawners.map(spawner => (\r\n        <Spawner key={spawner} />\r\n      ))}\r\n    </Layout.Content>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './layouts/App';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './styles/App.scss';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React, { useEffect, useCallback } from 'react';\r\nimport { Layout } from 'antd';\r\nimport AppBar from '../containers/AppBar';\r\nimport SpawnerContainer from '../containers/SpawnerContainer';\r\n\r\nexport default function App() {\r\n  const onUnload = useCallback(e => {\r\n    e.returnValue = '刷新后已填写模板将被清除';\r\n    return '刷新后已填写模板将被清除';\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('beforeunload', onUnload);\r\n    return () => window.removeEventListener('beforeunload', onUnload);\r\n  }, [onUnload]);\r\n\r\n  return (\r\n    <Layout className=\"app\">\r\n      <AppBar />\r\n      <SpawnerContainer />\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}